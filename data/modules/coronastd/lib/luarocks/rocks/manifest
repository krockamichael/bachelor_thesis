commands = {
   luacheck = {
      "luacheck/0.23.0-1"
   }
}
dependencies = {
   argparse = {
      ["0.7.0-1"] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     5, 1, string = "5.1"
                  }
               },
               {
                  op = "<",
                  version = {
                     5, 4, string = "5.4"
                  }
               }
            },
            name = "lua"
         }
      }
   },
   coronastd = {
      ["1.0-2"] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     5, 1, string = "5.1"
                  }
               }
            },
            name = "lua"
         },
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     0, 17, 0, string = "0.17.0"
                  }
               }
            },
            name = "luacheck"
         }
      }
   },
   luacheck = {
      ["0.23.0-1"] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     5, 1, string = "5.1"
                  }
               },
               {
                  op = "<",
                  version = {
                     5, 4, string = "5.4"
                  }
               }
            },
            name = "lua"
         },
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     0, 6, 0, string = "0.6.0"
                  }
               }
            },
            name = "argparse"
         },
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     1, 6, 3, string = "1.6.3"
                  }
               }
            },
            name = "luafilesystem"
         }
      }
   },
   luafilesystem = {
      ["1.7.0-2"] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     5, 1, string = "5.1"
                  }
               }
            },
            name = "lua"
         }
      }
   }
}
modules = {
   argparse = {
      "argparse/0.7.0-1"
   },
   coronastd = {
      "coronastd/1.0-2"
   },
   lfs = {
      "luafilesystem/1.7.0-2"
   },
   luacheck = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.builtin_standards"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.cache"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.check"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.check_state"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.config"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.core_utils"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.decoder"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.expand_rockspec"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.filter"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.format"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.fs"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.globbing"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.lexer"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.love_standard"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.main"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.multithreading"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.ngx_standard"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.options"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.parser"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.profiler"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.runner"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.detect_bad_whitespace"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.detect_cyclomatic_complexity"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.detect_empty_blocks"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.detect_empty_statements"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.detect_globals"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.detect_reversed_fornum_loops"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.detect_unbalanced_assignments"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.detect_uninit_accesses"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.detect_unreachable_code"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.detect_unused_fields"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.detect_unused_locals"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.linearize"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.name_functions"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.parse"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.parse_inline_options"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.resolve_locals"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.stages.unwrap_parens"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.standards"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.unicode"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.unicode_printability_boundaries"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.utils"] = {
      "luacheck/0.23.0-1"
   },
   ["luacheck.version"] = {
      "luacheck/0.23.0-1"
   }
}
repository = {
   argparse = {
      ["0.7.0-1"] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {},
            modules = {
               argparse = "argparse.lua"
            }
         }
      }
   },
   coronastd = {
      ["1.0-2"] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {
               argparse = "0.7.0-1",
               luacheck = "0.23.0-1",
               luafilesystem = "1.7.0-2"
            },
            modules = {
               coronastd = "coronastd.lua"
            }
         }
      }
   },
   luacheck = {
      ["0.23.0-1"] = {
         {
            arch = "installed",
            commands = {
               luacheck = "luacheck"
            },
            dependencies = {
               argparse = "0.7.0-1",
               luafilesystem = "1.7.0-2"
            },
            modules = {
               luacheck = "luacheck/init.lua",
               ["luacheck.builtin_standards"] = "luacheck/builtin_standards.lua",
               ["luacheck.cache"] = "luacheck/cache.lua",
               ["luacheck.check"] = "luacheck/check.lua",
               ["luacheck.check_state"] = "luacheck/check_state.lua",
               ["luacheck.config"] = "luacheck/config.lua",
               ["luacheck.core_utils"] = "luacheck/core_utils.lua",
               ["luacheck.decoder"] = "luacheck/decoder.lua",
               ["luacheck.expand_rockspec"] = "luacheck/expand_rockspec.lua",
               ["luacheck.filter"] = "luacheck/filter.lua",
               ["luacheck.format"] = "luacheck/format.lua",
               ["luacheck.fs"] = "luacheck/fs.lua",
               ["luacheck.globbing"] = "luacheck/globbing.lua",
               ["luacheck.lexer"] = "luacheck/lexer.lua",
               ["luacheck.love_standard"] = "luacheck/love_standard.lua",
               ["luacheck.main"] = "luacheck/main.lua",
               ["luacheck.multithreading"] = "luacheck/multithreading.lua",
               ["luacheck.ngx_standard"] = "luacheck/ngx_standard.lua",
               ["luacheck.options"] = "luacheck/options.lua",
               ["luacheck.parser"] = "luacheck/parser.lua",
               ["luacheck.profiler"] = "luacheck/profiler.lua",
               ["luacheck.runner"] = "luacheck/runner.lua",
               ["luacheck.stages"] = "luacheck/stages.lua",
               ["luacheck.stages.detect_bad_whitespace"] = "luacheck/stages/detect_bad_whitespace.lua",
               ["luacheck.stages.detect_cyclomatic_complexity"] = "luacheck/stages/detect_cyclomatic_complexity.lua",
               ["luacheck.stages.detect_empty_blocks"] = "luacheck/stages/detect_empty_blocks.lua",
               ["luacheck.stages.detect_empty_statements"] = "luacheck/stages/detect_empty_statements.lua",
               ["luacheck.stages.detect_globals"] = "luacheck/stages/detect_globals.lua",
               ["luacheck.stages.detect_reversed_fornum_loops"] = "luacheck/stages/detect_reversed_fornum_loops.lua",
               ["luacheck.stages.detect_unbalanced_assignments"] = "luacheck/stages/detect_unbalanced_assignments.lua",
               ["luacheck.stages.detect_uninit_accesses"] = "luacheck/stages/detect_uninit_accesses.lua",
               ["luacheck.stages.detect_unreachable_code"] = "luacheck/stages/detect_unreachable_code.lua",
               ["luacheck.stages.detect_unused_fields"] = "luacheck/stages/detect_unused_fields.lua",
               ["luacheck.stages.detect_unused_locals"] = "luacheck/stages/detect_unused_locals.lua",
               ["luacheck.stages.linearize"] = "luacheck/stages/linearize.lua",
               ["luacheck.stages.name_functions"] = "luacheck/stages/name_functions.lua",
               ["luacheck.stages.parse"] = "luacheck/stages/parse.lua",
               ["luacheck.stages.parse_inline_options"] = "luacheck/stages/parse_inline_options.lua",
               ["luacheck.stages.resolve_locals"] = "luacheck/stages/resolve_locals.lua",
               ["luacheck.stages.unwrap_parens"] = "luacheck/stages/unwrap_parens.lua",
               ["luacheck.standards"] = "luacheck/standards.lua",
               ["luacheck.unicode"] = "luacheck/unicode.lua",
               ["luacheck.unicode_printability_boundaries"] = "luacheck/unicode_printability_boundaries.lua",
               ["luacheck.utils"] = "luacheck/utils.lua",
               ["luacheck.version"] = "luacheck/version.lua"
            }
         }
      }
   },
   luafilesystem = {
      ["1.7.0-2"] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {},
            modules = {
               lfs = "lfs.so"
            }
         }
      }
   }
}
